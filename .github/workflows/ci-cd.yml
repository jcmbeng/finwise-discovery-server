name: Build and Deploy Discovery Server

on:
  push:
    branches:
      - develop
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to (dev, prod)'
        required: true
        default: 'develop'
      branch:
        description: 'Branch to build'
        required: false
        default: 'main'

#on:
#  push:
#    branches: [main]
#  pull_request:
#    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache .m2 repository manually (optional, alternative)
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Build Spring Boot JAR
        run: mvn clean package -Dspring.profile=dev

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.REMOTE_HOST }} >> ~/.ssh/known_hosts
          


      - name: Copy files to remote server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "target/*.jar,docker-compose.yml,Dockerfile"
          target: ${{ secrets.REMOTE_APP_DIR }}


      - name: Build and run container on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} << 'EOF'
            cd ${{ secrets.REMOTE_APP_DIR }}
            docker compose down
            docker compose up -d
          EOF